
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ingressroutes.traefik.containo.us
spec:
  group: traefik.containo.us
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: IngressRoute
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced


---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ingressroutetcps.traefik.containo.us
spec:
  group: traefik.containo.us
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: IngressRouteTCP
    plural: ingressroutetcps
    singular: ingressroutetcp
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: middlewares.traefik.containo.us
spec:
  group: traefik.containo.us
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: Middleware
    plural: middlewares
    singular: middleware
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tlsoptions.traefik.containo.us
spec:
  group: traefik.containo.us
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: TLSOption
    plural: tlsoptions
    singular: tlsoption
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: traefikservices.traefik.containo.us

spec:
  group: traefik.containo.us
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: TraefikService
    plural: traefikservices
    singular: traefikservice
  scope: Namespaced

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: tlsstores.traefik.containo.us
spec:
  group: traefik.containo.us
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: TLSStore
    plural: tlsstores
    singular: tlsstore
  scope: Namespaced


---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: ingressrouteudps.traefik.containo.us
spec:
  group: traefik.containo.us
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: IngressRouteUDP
    plural: ingressrouteudps
    singular: ingressrouteudp
  scope: Namespaced

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-controller

rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - traefik.containo.us
    resources:
      - middlewares
      - ingressroutes
      - traefikservices
      - ingressroutetcps
      - ingressrouteudps
      - tlsoptions
      - tlsstores
    verbs:
      - get
      - list
      - watch

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-ingress-controller

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: default

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-ingress-controller
  labels:
    app: traefik-ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik-ingress-controller
  template:
    metadata:
      labels:
        app: traefik-ingress-controller
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.2
          args:
            - --global.sendanonymoususage=false
            - --global.checknewversion=false
            - --accesslog
            - --log.level=DEBUG
            - --entrypoints.http.Address=:80
            - --entrypoints.https.Address=:443
            - --providers.kubernetescrd
            - --providers.kubernetescrd.namespaces=default
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443

---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress-service

spec:
  type: NodePort
  ports:
    - protocol: TCP
      name: http
      port: 80
      nodePort: 30080
    - protocol: TCP
      name: https
      port: 443
      nodePort: 30443
  selector:
    app: traefik-ingress-controller

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: front
spec:
  replicas: 1
  selector:
    matchLabels:
      service: front
  template:
    metadata:
      name: front
      labels:
        name: front
        app: front
        service: front
    spec:
      containers:
      - image: chaostoolkit/front
        name: front
        ports:
        - containerPort: 8000
          protocol: TCP
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "200m"
            memory: 64Mi
          requests:
            cpu: "100m"
            memory: 64Mi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: middle
spec:
  replicas: 1
  selector:
    matchLabels:
      service: middle
  template:
    metadata:
      name: middle
      labels:
        name: middle
        app: middle
        service: middle
    spec:
      containers:
      - image: chaostoolkit/middle
        name: middle
        ports:
        - containerPort: 8001
          protocol: TCP
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "200m"
            memory: 64Mi
          requests:
            cpu: "100m"
            memory: 64Mi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: back
spec:
  replicas: 1
  selector:
    matchLabels:
      service: back
  template:
    metadata:
      name: back
      labels:
        name: back
        app: back
        service: back
    spec:
      containers:
      - image: chaostoolkit/back
        name: back
        ports:
        - containerPort: 8002
          protocol: TCP
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "200m"
            memory: 64Mi
          requests:
            cpu: "100m"
            memory: 64Mi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

---
kind: Service
apiVersion: v1
metadata:
  name: front
  labels:
    service: front
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  selector:
    service: front

---
kind: Service
apiVersion: v1
metadata:
  name: middle
  labels:
    service: middle
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 8001
    targetPort: 8001
  selector:
    service: middle

---
kind: Service
apiVersion: v1
metadata:
  name: back
  labels:
    service: back
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 8002
    targetPort: 8002
  selector:
    service: back

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: ratelimit
spec:
  rateLimit:
      average: 300
      burst: 100

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: httpmiddlewares
spec:
  chain:
    middlewares:
    - name: ratelimit

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: front-http
spec:
  entryPoints:
    - http
  routes:
  - match: PathPrefix(`/`)
    kind: Rule
    middlewares:
    - name: httpmiddlewares
    services:
    - name: front
      port: 8000